Here is an implementation of the described search algorithm in Python:

```python
def binary_search(a, x):
    left = 0
    right = len(x) - 1
    
    while left <= right:
        mid = (left + right) // 2
        
        if x[mid] == a:
            return mid
        
        if x[mid] < a:
            left = mid + 1
        else:
            right = mid - 1
            
    return -1

# Test the function
x = [1, 3, 5, 7, 9, 11, 13, 15]
a = 7
result = binary_search(a, x)

if result != -1:
    print(f"Element found at index {result}")
else:
    print("Element not found")
```

This code defines a function `binary_search` that takes a target number `a` and a sorted list `x`, and it performs the binary search algorithm according to the steps you provided. The function returns the index of the target element if found, otherwise, it returns -1. 

You can test the function by providing a sorted list `x` and the number `a` you want to search for. If the element is found, it will print the index where it is located.